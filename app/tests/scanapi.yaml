endpoints:
  - name: "Testing User endpoints"
    requests:
      - name: "list_users"
        path: "http://127.0.0.1:8000/user/users/list"
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}

      - name: "list_user_by_email"
        path: "http://127.0.0.1:8000/user/maria@email.com"
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}

      - name: "create_user_that_is_already_registered"
        method: "post"
        path: "http://127.0.0.1:8000/user/create"
        body:
            name: "jose"
            email: "ze@email.com"
            password: "123456"
        tests:
          - name: is_status_code_409
            assert: ${{ response.status_code == 409 }}
          - name: is_user_registered
            assert: ${{ response.json().get("detail") == "User already registered" }}

      - name: "delete_user"
        method: "delete"
        path: "http://127.0.0.1:8000/user/delete"
        params:
            email: "teste@email.com"
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}

      - name: "create_user_that_is_not_registered"
        method: "post"
        path: "http://127.0.0.1:8000/user/create"
        body:
            name: "tes"
            email: "teste@email.com"
            password: "123456"
        tests:
          - name: is_status_code_201
            assert: ${{ response.status_code == 201 }}

      - name: "update_user"
        method: "put"
        path: "http://127.0.0.1:8000/user/update"
        body:
            name: "teste"
            email: "teste@email.com"
            password: "123456"
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}

  - name: "Testing Book endpoints"
    requests:
      - name: "list_books"
        path: "http://127.0.0.1:8000/book/books/list"
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}

      - name: "list_book_by_isbn"
        path: "http://127.0.0.1:8000/book/9786669612921"
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}
          - name: is_response_content_isbn_9786669612921
            assert: ${{ response.json().get("book title") == "Dr√°cula" }}

      - name: "create_book_that_is_already_registered"
        method: "post"
        path: "http://127.0.0.1:8000/book/create"
        params:
            isbn: "9783109619876"
            title: "Moby Dick"
            author: "Herman Melville"
            publish_year: "1851"
            genre: "Romance"
        tests:
          - name: is_status_code_409
            assert: ${{ response.status_code == 409 }}
          - name: is_book_registered
            assert: ${{ response.json().get("detail") == "Book already registered" }}

      - name: "delete_book"
        method: "delete"
        path: "http://127.0.0.1:8000/book/delete"
        params:
            isbn: "9783009659876"
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}

      - name: "create_book_that_is_not_registered"
        method: "post"
        path: "http://127.0.0.1:8000/book/create"
        params:
            isbn: "9783009659876"
            title: "Um livro de tes"
            author: "Tes"
            publish_year: "2000"
            genre: "Tes"
        tests:
          - name: is_status_code_201
            assert: ${{ response.status_code == 201 }}

      - name: "update_book"
        method: "put"
        path: "http://127.0.0.1:8000/book/update"
        params:
            isbn: "9783009659876"
            title: "Um livro de teste"
            author: "Teste"
            publish_year: "2024"
            genre: "Teste"
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}

  - name: "Testing Bookshelf endpoints"
    requests:
      - name: "list_user_bookshelf_by_default_filter"
        path: "http://127.0.0.1:8000/bookshelf/books"
        params:
            user_email: "paula@email.com"
            filter: 0
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}

      - name: "list_user_bookshelf_by_title_filter"
        path: "http://127.0.0.1:8000/bookshelf/books"
        params:
            user_email: "paula@email.com"
            filter: 1
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}

      - name: "list_user_bookshelf_by_author_filter"
        path: "http://127.0.0.1:8000/bookshelf/books"
        params:
            user_email: "paula@email.com"
            filter: 2
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}

      - name: "list_user_bookshelf_by_default_filter"
        path: "http://127.0.0.1:8000/bookshelf/books"
        params:
            user_email: "paula@email.com"
            filter: 3
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}

      - name: "add_to_shelf_book_already_registered"
        method: "post"
        path: "http://127.0.0.1:8000/bookshelf/add"
        params:
            book_isbn: "9783109619876"
            user_email: "paula@email.com"
        tests:
          - name: is_status_code_409
            assert: ${{ response.status_code == 409 }}
          - name: is_book_already_on_shelf
            assert: ${{ response.json().get("detail") == "Book already on shelf" }}

      - name: "remove_from_shelf"
        method: "delete"
        path: "http://127.0.0.1:8000/bookshelf/delete"
        params:
            book_isbn: "97865876031863"
            user_email: "paula@email.com"
        tests:
          - name: is_status_code_200
            assert: ${{ response.status_code == 200 }}

      - name: "add_to_shelf_book_not_registered"
        method: "post"
        path: "http://127.0.0.1:8000/bookshelf/add"
        params:
            book_isbn: "97865876031863"
            user_email: "paula@email.com"
        tests:
          - name: is_status_code_201
            assert: ${{ response.status_code == 201 }}